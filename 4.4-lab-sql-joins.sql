use sakila;

### Write SQL queries to perform the following tasks using the Sakila database:
	# 1. List the number of films per category. 
    # Need: film, film_category, category
    select name, count(film_id) 
	from film
	inner join film_category
	using (film_id)
	inner join category
	using(category_id) 
	group by name;
    
	# 2. Retrieve the store ID, city, and country for each store. 
    # Need: store, city, country (maybe address as connector between store and city? - yes, need 4 tables!)
    select store_id, city, country 
	from store
	inner join address
	using (address_id)
	inner join city
	using(city_id) 
    inner join country
	using(country_id) 
	group by store_id;
    
    # 3. Calculate the total revenue generated by each store in dollars.
    # Need: store and payment + their connector: customer? 
    select round(sum(amount)), store_id
    from payment 
    inner join customer
    using (customer_id)
    inner join store
    using(store_id)
    group by store_id;
    
    # 4. Determine the average running time of films for each category.
    # Need: film, category + connector: film_category 
    select avg(length), name 
    from film
    inner join film_category
    using (film_id)
    inner join category
    using (category_id)
    group by name;
    
##### Bonus:
    # 5. Identify the film categories with the longest average running time.
    # 6. Display the top 10 most frequently rented movies in descending order.
    # 7. Determine if "Academy Dinosaur" can be rented from Store 1.
    # 8. Provide a list of all distinct film titles, along with their availability status in the inventory. Include a column indicating whether each title is 'Available' or 'NOT available.' Note that there are 42 titles that are not in the inventory, and this information can be obtained using a CASE statement combined with IFNULL."

